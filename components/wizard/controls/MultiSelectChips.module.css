.container {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  width: 100%;
  position: relative;
}

.label {
  display: block;
  font-size: 0.875rem;
  font-weight: 500;
  color: #e2e8f0;
  margin-bottom: 0.25rem;
}

.chipContainer {
  display: flex;
  align-items: flex-start;
  gap: 0.5rem;
  min-height: 48px;
  padding: 0.5rem;
  background-color: white;
  border: 1px solid var(--border, #d1d5db);
  border-radius: 8px;
  cursor: text;
  transition: all 0.2s ease;
}

.chipContainer:focus {
  outline: none;
  box-shadow: 0 0 0 2px rgba(24, 120, 185, 0.5);
}

.chipContainer.hasError {
  border-color: #e53e3e;
}

.chipContainer.disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.container.open {
  z-index: 2;
}

.chipList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  align-items: center;
  /* Allow the chip list to take up all available flexible space */
  flex: 1;
  min-width: 0; /* Prevents flexbox overflow issues */
}

.chip {
  display: flex;
  align-items: center;
  background-color: #1878b9;
  color: white;
  font-size: 0.75rem;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  animation: fadeIn 0.2s ease-in;
}

.chipRemove {
  margin-left: 0.5rem;
  background: none;
  border: none;
  color: rgba(255, 255, 255, 0.8);
  font-size: 1rem;
  line-height: 1;
  padding: 0;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 16px;
  height: 16px;
}

.chipRemove:hover {
  color: white;
}

.searchInput {
  background: transparent;
  border: none;
  color: black;
  font-size: 0.875rem;
  padding: 0.5rem 0.25rem;
  outline: none;
  /* Allow the input to grow and fill the remaining space */
  flex-grow: 1;
  /* Provide a sensible base and minimum width */
  flex-basis: 80px;
  min-width: 80px;
}

.searchInput::placeholder {
  color: #6b7280;
}

.actionsWrapper {
  display: flex;
  align-items: center;
}

.clearButton {
  composes: actionButton from './common.module.css';
}

.dropdownIcon {
  composes: actionButton from './common.module.css';
  transition: transform 0.2s ease;
}

.chipContainer[aria-expanded='true'] .dropdownIcon {
  transform: rotate(180deg);
}

.dropdown {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  margin-top: 0.25rem;
  background-color: white;
  border: 1px solid var(--border, #d1d5db);
  border-radius: 8px;
  z-index: 10;
  max-height: 200px;
  overflow-y: auto;
  box-shadow:
    0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  animation: fadeIn 0.2s ease-in;
}

.option {
  display: flex;
  align-items: center;
  padding: 0.75rem 1rem;
  cursor: pointer;
  min-height: 48px;
  color: black;
  transition: background-color 0.15s ease;
}

.option:hover {
  background-color: #f3f4f6;
}

.option.selected {
  background-color: #e5e7eb;
}

.optionCheckbox {
  width: 20px;
  height: 20px;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  margin-right: 0.75rem;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
}

.selected .optionCheckbox {
  background-color: #1878b9;
  border-color: #1878b9;
}

.optionLabel {
  flex: 1;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.noOptions {
  padding: 1rem;
  text-align: center;
  color: #6b7280;
}

.error {
  font-size: 0.75rem;
  color: #fc8181;
  margin-top: 0.25rem;
  animation: fadeIn 0.2s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Ensure proper scrollbar styling */
.dropdown::-webkit-scrollbar {
  width: 8px;
}

.dropdown::-webkit-scrollbar-track {
  background: #1a1d24;
  border-radius: 8px;
}

.dropdown::-webkit-scrollbar-thumb {
  background: #4a5568;
  border-radius: 8px;
}

.dropdown::-webkit-scrollbar-thumb:hover {
  background: #718096;
}
