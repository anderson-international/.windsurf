{
  "timestamp": "2025-07-27T14:51:27.236Z",
  "totalFiles": 3,
  "results": {
    "services\\rate-generator.ts": {
      "filePath": "services\\rate-generator.ts",
      "size": {
        "lines": 123,
        "limit": 100,
        "type": "services",
        "status": "FAIL",
        "percentage": 123
      },
      "comments": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "react": {
        "hasReactImport": false,
        "hasUseCallback": false,
        "hasUseMemo": false,
        "hasUseEffect": false,
        "hasHooks": false,
        "issues": []
      },
      "consoleErrors": {
        "violations": [
          {
            "line": 107,
            "method": "error",
            "content": "console.error(`âœ— Failed to generate rates for carrier: ${carrier.name}`, errorMessage)",
            "guidance": "Replace console.error with proper error throwing. Use 'throw new Error(message)' instead of logging and continuing execution."
          }
        ],
        "count": 1,
        "status": "FAIL"
      },
      "eslint": {
        "errors": [],
        "warnings": [
          {
            "line": 107,
            "column": 9,
            "message": "Unexpected console statement  no-console"
          }
        ]
      },
      "typescript": {
        "totalFunctions": 0,
        "missingReturnTypes": 0,
        "hasExplicitTypes": true,
        "status": "PASS"
      }
    },
    "pages\\api\\rates\\generate-all.ts": {
      "filePath": "pages\\api\\rates\\generate-all.ts",
      "size": {
        "lines": 59,
        "limit": 150,
        "type": "components",
        "status": "PASS",
        "percentage": 39
      },
      "comments": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "react": {
        "hasReactImport": false,
        "hasUseCallback": false,
        "hasUseMemo": false,
        "hasUseEffect": false,
        "hasHooks": false,
        "issues": []
      },
      "consoleErrors": {
        "violations": [
          {
            "line": 50,
            "method": "error",
            "content": "console.error('Failed to generate rates for all carriers:', error)",
            "guidance": "Replace console.error with proper error throwing. Use 'throw new Error(message)' instead of logging and continuing execution."
          }
        ],
        "count": 1,
        "status": "FAIL"
      },
      "eslint": {
        "errors": [],
        "warnings": [
          {
            "line": 50,
            "column": 5,
            "message": "Unexpected console statement  no-console"
          }
        ]
      },
      "typescript": {
        "totalFunctions": 1,
        "missingReturnTypes": 1,
        "hasExplicitTypes": false,
        "status": "FAIL"
      }
    },
    "pages\\api\\rates\\generate\\[carrierId].ts": {
      "filePath": "pages\\api\\rates\\generate\\[carrierId].ts",
      "size": {
        "lines": 57,
        "limit": 150,
        "type": "components",
        "status": "PASS",
        "percentage": 38
      },
      "comments": {
        "violations": [],
        "count": 0,
        "status": "PASS"
      },
      "react": {
        "hasReactImport": false,
        "hasUseCallback": false,
        "hasUseMemo": false,
        "hasUseEffect": false,
        "hasHooks": false,
        "issues": []
      },
      "consoleErrors": {
        "violations": [
          {
            "line": 48,
            "method": "error",
            "content": "console.error(`Failed to generate rates for carrier ${parsedCarrierId}:`, error)",
            "guidance": "Replace console.error with proper error throwing. Use 'throw new Error(message)' instead of logging and continuing execution."
          }
        ],
        "count": 1,
        "status": "FAIL"
      },
      "eslint": {
        "errors": [],
        "warnings": [
          {
            "line": 48,
            "column": 5,
            "message": "Unexpected console statement  no-console"
          }
        ]
      },
      "typescript": {
        "totalFunctions": 1,
        "missingReturnTypes": 1,
        "hasExplicitTypes": false,
        "status": "FAIL"
      }
    }
  }
}